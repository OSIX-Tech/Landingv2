---
// Header.astro - Con funcionalidad de scroll a secciones mejorada

const navItems = [
  { label: 'About Us', href: '#about' },
  { label: 'Services', href: '#services' },
  { label: 'Projects', href: '#projects' },
];

// Añadir clase activa para la página actual
const currentPath = Astro.url.pathname;
---

<header class="fixed w-full z-50 transition-all duration-300" id="main-header">
  <div class="mx-auto px-6 md:px-10 py-5">
    <div class="flex items-center justify-between">
      <a href="#home" class="flex items-center z-10 logo-link">
        <img
          src="/full_logo.png"
          alt="YourCompany Logo"
          class="h-9 md:h-10 w-auto ml-3 transition-transform duration-200"
          id="logo-img"
        />
      </a>
      
      <!-- Navegación principal - Versión desktop -->
      <nav class="hidden md:flex items-center justify-center">
        <div class="relative flex items-center">
          {navItems.map((item, index) => {
            return (
              <a
                href={item.href}
                class="relative px-5 py-3 text-base font-normal transition-colors duration-200 rounded-full hover:bg-white/10 nav-item"
                data-index={index}
              >
                {item.label}
              </a>
            );
          })}
          <!-- Indicador activo -->
          <div id="nav-indicator" class="absolute bottom-0 h-1 bg-black rounded-full transition-all duration-300 pointer-events-none opacity-0"></div>
        </div>
      </nav>
      
      <!-- CTA button -->
      <div class="hidden md:block">
        <a href="/contact" class="inline-flex items-center justify-center h-10 px-5 py-0 text-sm font-medium bg-black text-white transition-all duration-300 rounded-full hover:shadow-lg hover:shadow-black/20 hover:scale-105">
          <span>Contacto</span>
          <svg xmlns="http://www.w3.org/2000/svg" class="w-4 h-4 ml-2 -mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14 5l7 7m0 0l-7 7m7-7H3" />
          </svg>
        </a>
      </div>

      <!-- Menú móvil -->
      <button id="mobile-toggle" class="md:hidden flex items-center justify-center w-10 h-10 focus:outline-none z-10" aria-label="Menú">
        <div class="burger-icon">
          <span class="burger-line"></span>
          <span class="burger-line"></span>
        </div>
      </button>
    </div>
  </div>
  
  <!-- Menú móvil overlay -->
  <div id="mobile-menu" class="fixed inset-0 bg-white flex flex-col justify-center items-center opacity-0 pointer-events-none transition-all duration-500 z-40">
    <nav class="flex flex-col items-center space-y-6 px-6 w-full">
      {navItems.map(item => {
        return (
          <a
            href={item.href}
            class="text-2xl font-light transition-colors duration-200 py-2 mobile-nav-item text-gray-500 hover:text-black"
          >
            {item.label}
          </a>
        );
      })}
      
      <div class="pt-8 w-full">
        <a href="/demo" class="flex items-center justify-center w-full px-6 py-4 text-base font-medium bg-black text-white transition-all duration-300 rounded-full mt-2 hover:opacity-90">
          Demo gratuita
          <svg xmlns="http://www.w3.org/2000/svg" class="w-4 h-4 ml-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14 5l7 7m0 0l-7 7m7-7H3" />
          </svg>
        </a>
      </div>
    </nav>
    
    <div class="absolute bottom-10 left-0 w-full px-6">
      <div class="flex flex-col items-center justify-center space-y-4">
        <div class="flex space-x-4">
          <a href="#" class="text-gray-500 hover:text-black transition-colors duration-200">
            <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" viewBox="0 0 24 24">
              <path d="M12 0c-6.627 0-12 5.373-12 12s5.373 12 12 12 12-5.373 12-12-5.373-12-12-12zm-2 16h-2v-6h2v6zm-1-6.891c-.607 0-1.1-.496-1.1-1.109 0-.612.492-1.109 1.1-1.109s1.1.497 1.1 1.109c0 .613-.493 1.109-1.1 1.109zm8 6.891h-1.998v-2.861c0-1.881-2.002-1.722-2.002 0v2.861h-2v-6h2v1.093c.872-1.616 4-1.736 4 1.548v3.359z"/>
            </svg>
          </a>
          <a href="#" class="text-gray-500 hover:text-black transition-colors duration-200">
            <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" viewBox="0 0 24 24">
              <path d="M12 0c-6.627 0-12 5.373-12 12s5.373 12 12 12 12-5.373 12-12-5.373-12-12-12zm6.066 9.645c.183 4.04-2.83 8.544-8.164 8.544-1.622 0-3.131-.476-4.402-1.291 1.524.18 3.045-.244 4.252-1.189-1.256-.023-2.317-.854-2.684-1.995.451.086.895.061 1.298-.049-1.381-.278-2.335-1.522-2.304-2.853.388.215.83.344 1.301.359-1.279-.855-1.641-2.544-.889-3.835 1.416 1.738 3.533 2.881 5.92 3.001-.419-1.796.944-3.527 2.799-3.527.825 0 1.572.349 2.096.907.654-.128 1.27-.368 1.824-.697-.215.671-.67 1.233-1.263 1.589.581-.07 1.135-.224 1.649-.453-.384.578-.87 1.084-1.433 1.489z"/>
            </svg>
          </a>
          <a href="#" class="text-gray-500 hover:text-black transition-colors duration-200">
            <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" viewBox="0 0 24 24">
              <path d="M12 0c-6.627 0-12 5.373-12 12s5.373 12 12 12 12-5.373 12-12-5.373-12-12-12zm-4.5 16.5v-9.375h-1.875v9.375h1.875zm-.938-10.688c.604 0 1.13-.393 1.13-.984s-.526-.985-1.13-.985c-.63 0-1.162.393-1.162.985 0 .591.532.984 1.162.984zm8.663 10.688v-5.325c0-1.771-.931-2.625-2.18-2.625-1.037 0-1.704.615-1.987 1.205v-1.005h-1.993v7.75h1.976v-4.492c0-.719.543-1.289 1.259-1.289.699 0 1.025.521 1.025 1.289v4.492h1.9z"/>
            </svg>
          </a>
        </div>
        <div class="text-gray-400 text-sm">© 2025 YourCompany</div>
      </div>
    </div>
  </div>
</header>

<script>
  let isScrollingToSection = false;

  // Script para manejar la navegación interactiva
  document.addEventListener('DOMContentLoaded', () => {
    const header = document.getElementById('main-header');
    const logoText = document.getElementById('logo-text');
    const navItems = document.querySelectorAll('.nav-item');
    const navIndicator = document.getElementById('nav-indicator');
    const mobileToggle = document.getElementById('mobile-toggle');
    const mobileMenu = document.getElementById('mobile-menu');
    const burgerIcon = document.querySelector('.burger-icon');
    const allNavLinks = document.querySelectorAll('a[href^="#"]');
    const logoLink = document.querySelector('.logo-link');
    let isMenuOpen = false;
    let activeNavItem = null;
    
    // Función para actualizar el indicador de navegación basado en la sección actual
    function updateIndicatorBySection(sectionId) {
      // Eliminar clase activa de todos los elementos
      navItems.forEach(item => {
        item.classList.remove('nav-active');
      });
      
      // Si estamos en el hero, no activamos ningún elemento de navegación
      if (sectionId === 'home') {
        if (navIndicator) {
          navIndicator.style.opacity = '0';
        }
        activeNavItem = null;
        return;
      }
      
      // Añadir clase activa al elemento correspondiente
      const targetNavItem = document.querySelector(`a[href="#${sectionId}"]`);
      if (targetNavItem) {
        targetNavItem.classList.add('nav-active');
        activeNavItem = targetNavItem;
        
        // Actualizar el indicador
        if (navIndicator) {
          navIndicator.style.width = `${targetNavItem.offsetWidth - 20}px`;
          navIndicator.style.left = `${targetNavItem.offsetLeft + 10}px`;
          navIndicator.style.opacity = '1';
        }
      }
    }
    
    // Hover en elementos del menú - versión mejorada
    navItems.forEach(item => {
      item.addEventListener('mouseenter', () => {
        if (!isMenuOpen && navIndicator) {
          // Mantener el ancho y posición del indicador
          navIndicator.style.width = `${item.offsetWidth - 20}px`;
          navIndicator.style.left = `${item.offsetLeft + 10}px`;
          navIndicator.style.opacity = '1';
          
          // Añadir la clase hover al elemento actual
          item.classList.add('nav-hover');
        }
      });
      
      item.addEventListener('mouseleave', () => {
        if (!isMenuOpen && navIndicator) {
          // Eliminar la clase hover
          item.classList.remove('nav-hover');
          
          if (activeNavItem) {
            // Si hay un elemento activo, volver a él
            navIndicator.style.width = `${activeNavItem.offsetWidth - 20}px`;
            navIndicator.style.left = `${activeNavItem.offsetLeft + 10}px`;
            navIndicator.style.opacity = '1';
          } else {
            // Si no hay elemento activo, ocultar el indicador
            navIndicator.style.opacity = '0';
          }
        }
      });
    });
    
    // Scroll suave a secciones mejorado
    allNavLinks.forEach(link => {
      link.addEventListener('click', (e) => {
        e.preventDefault();
        
        // Cerrar el menú móvil si está abierto
        if (isMenuOpen) toggleMobileMenu();
        
        const targetId = link.getAttribute('href');
        const targetIdClean = targetId.substring(1); // Eliminar el #
        
        if (targetIdClean === 'home') {
          // Scroll al inicio de la página
          window.scrollTo({
            top: 0,
            behavior: 'smooth'
          });
        } else {
          // Scroll a la sección específica
          const targetSection = document.querySelector(targetId);
          if (targetSection) {
            // Cálculo del offset para tener en cuenta el header fijo
            const headerHeight = header.offsetHeight;
            const targetPosition = targetSection.getBoundingClientRect().top + window.pageYOffset - headerHeight;
            
            window.scrollTo({
              top: targetPosition,
              behavior: 'smooth'
            });
          }
        }
      });
    });
    
    // Activar enlaces de navegación según la sección visible - versión mejorada
    function setActiveNavItem() {
      const sections = document.querySelectorAll('section[id]');
      let scrollPosition = window.scrollY + header.offsetHeight + 100; // Añadir un pequeño offset
      
      sections.forEach(section => {
        const sectionTop = section.offsetTop;
        const sectionHeight = section.offsetHeight;
        const sectionId = section.getAttribute('id');
        
        if (scrollPosition >= sectionTop && scrollPosition < sectionTop + sectionHeight) {
          updateIndicatorBySection(sectionId);
        }
      });
      
      // Si estamos al inicio de la página, desactivar todos los elementos de navegación
      if (scrollPosition < 100 + header.offsetHeight) {
        updateIndicatorBySection('home');
      }
    }
    
    // Efectos de scroll
    function handleScroll() {
      // Estilo del header al hacer scroll
      if (window.scrollY > 20) {
        header.classList.add('scrolled');
        if (logoText) logoText.classList.add('text-black');
      } else {
        header.classList.remove('scrolled');
        if (logoText) logoText.classList.remove('text-black');
      }
      
      // Actualizar la navegación activa
      setActiveNavItem();
    }
    
    // Toggle del menú móvil
    function toggleMobileMenu() {
      if (isMenuOpen) {
        mobileMenu.classList.remove('opacity-100', 'pointer-events-auto');
        mobileMenu.classList.add('opacity-0', 'pointer-events-none');
        burgerIcon.classList.remove('open');
        document.body.classList.remove('overflow-hidden');
      } else {
        mobileMenu.classList.add('opacity-100', 'pointer-events-auto');
        mobileMenu.classList.remove('opacity-0', 'pointer-events-none');
        burgerIcon.classList.add('open');
        document.body.classList.add('overflow-hidden');
      }
      isMenuOpen = !isMenuOpen;
    }
    
    if (mobileToggle) {
      mobileToggle.addEventListener('click', toggleMobileMenu);
    }
    
    // Cerrar menú al hacer clic en un enlace
    const mobileLinks = mobileMenu.querySelectorAll('a');
    mobileLinks.forEach(link => {
      link.addEventListener('click', () => {
        if (isMenuOpen) toggleMobileMenu();
      });
    });
    
    // Inicializar efectos de scroll
    window.addEventListener('scroll', handleScroll);
    window.addEventListener('resize', () => {
      if (activeNavItem) {
        navIndicator.style.width = `${activeNavItem.offsetWidth - 20}px`;
        navIndicator.style.left = `${activeNavItem.offsetLeft + 10}px`;
      }
    });
    
    // Scroll inicial
    handleScroll();
  });
</script>

<style>
  #main-header {
    font-family: 'Plus Jakarta Sans', sans-serif;
    font-weight: 500;
  }
  
  /* Estilos para la navegación limpia */
  .scrolled {
    background-color: rgba(255, 255, 255, 0.95);
    backdrop-filter: blur(10px);
    box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);
  }
  
  /* Nuevos estilos para el hover y la navegación */
  .nav-item {
    color: rgba(0, 0, 0, 0.7);
    display: flex;
    align-items: center;
    justify-content: center;
    letter-spacing: 0.01em;
    position: relative;
    transition: color 0.3s ease, transform 0.2s ease;
    overflow: hidden;
  }
  
  /* Efecto hover con fondo y transformación */
  .nav-item:before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.05);
    border-radius: inherit;
    transform: scaleY(0);
    transform-origin: bottom;
    transition: transform 0.2s ease;
    z-index: -1;
  }
  
  .nav-item:hover {
    color: rgba(0, 0, 0, 0.9);
    transform: translateY(-2px);
  }
  
  .nav-item:hover:before {
    transform: scaleY(1);
  }
  
  /* Estilo para item activo */
  .nav-active {
    color: #000;
    font-weight: 500;
  }
  
  /* Estilo para el hover específico de clase */
  .nav-hover {
    color: rgba(0, 0, 0, 0.9);
  }
  
  /* Mejorar la transición del indicador y asegurar su visibilidad */
  #nav-indicator {
    transition: all 0.3s cubic-bezier(0.25, 0.1, 0.25, 1);
    z-index: 1; /* Asegurar que esté por encima del efecto :before */
  }
  
  /* Efecto hover en el logo */
  .logo-link {
    transition: transform 0.3s ease;
  }
  
  .logo-link:hover {
    transform: scale(1.05);
  }
  
  /* Estilos para el botón hamburguesa */
  .burger-icon {
    width: 24px;
    height: 18px;
    position: relative;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    cursor: pointer;
  }
  
  .burger-line {
    display: block;
    height: 2px;
    width: 100%;
    background-color: #000;
    border-radius: 4px;
    transition: all 0.3s ease;
    transform-origin: center;
  }
  
  .burger-icon.open .burger-line:nth-child(1) {
    transform: translateY(8px) rotate(45deg);
  }
  
  .burger-icon.open .burger-line:nth-child(2) {
    transform: translateY(-8px) rotate(-45deg);
  }
  
  /* Animación de entrada para el menú móvil */
  @keyframes fadeUpIn {
    from {
      opacity: 0;
      transform: translateY(10px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
  
  #mobile-menu nav a {
    animation: fadeUpIn 0.5s ease forwards;
    animation-delay: calc(0.1s * var(--index, 0));
    opacity: 0;
  }
  
  #mobile-menu.opacity-100 {
    transition-timing-function: cubic-bezier(0.22, 1, 0.36, 1);
  }
  
  /* Mejora en animaciones de elementos del menu móvil */
  .mobile-nav-item {
    position: relative;
    transition: all 0.3s ease;
  }
  
  .mobile-nav-item::after {
    content: '';
    position: absolute;
    bottom: -2px;
    left: 50%;
    width: 0;
    height: 1px;
    background-color: #000;
    transition: all 0.3s ease;
    transform: translateX(-50%);
  }
  
  .mobile-nav-item:hover::after {
    width: 30px;
  }
</style>