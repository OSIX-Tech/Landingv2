---
// Header.astro - Con funcionalidad de scroll a secciones mejorada

// (Eliminada la importación de Services)

const navItems = [
  { label: 'Services', href: '#services', scrollAdjust: -80 },
  { label: 'Values', href: '#values', scrollAdjust: -80 },
  { label: 'Projects', href: '#projects', scrollAdjust: -130 },
  { label: 'About Us', href: '#about', scrollAdjust: -80 },
  { label: 'Awards', href: '#awards', scrollAdjust: -80 },
  
];

// Añadir clase activa para la página actual
const currentPath = Astro.url.pathname;
---

<header class="fixed w-full z-50 transition-all duration-300 bg-white/95 backdrop-blur-md shadow-sm" id="main-header">
  <div class="mx-auto px-3 sm:px-6 md:px-10 py-2 sm:py-3 md:py-5">
    <div class="flex items-center justify-between">
      <a href="#home" class="flex items-center z-10 logo-link">
        <img
          src="/full_logo.png"
          alt="OSIX Logo"
          class="h-7 sm:h-7 md:h-8 w-auto transition-transform duration-200"
          id="logo-img"
        />
      </a>
      
      <!-- Navegación principal - Versión desktop -->
      <nav class="hidden md:flex items-center justify-center flex-1">
        <div class="relative flex items-center space-x-1">
          {navItems.map((item, index) => {
            return (
              <a
                href={item.href}
                class="relative px-4 sm:px-5 py-2 sm:py-3 text-sm sm:text-base font-medium transition-all duration-300 rounded-full hover:bg-black/5 nav-item"
                data-index={index}
                data-scroll-adjust={item.scrollAdjust}
              >
                {item.label}
              </a>
            );
          })}
          <div id="nav-indicator" class="absolute bottom-0 h-0.5 bg-black rounded-full transition-all duration-300 pointer-events-none opacity-0"></div>
        </div>
      </nav>
      
      <!-- CTA button -->
      <div class="hidden md:block">
        <a href="#contact" class="inline-flex items-center justify-center h-9 sm:h-10 px-4 sm:px-5 py-0 text-sm font-medium bg-black text-white transition-all duration-300 rounded-md hover:shadow-lg hover:shadow-black/20 hover:scale-105" data-scroll-adjust="-80">
          <span>Contact</span>
          <svg xmlns="http://www.w3.org/2000/svg" class="w-4 h-4 ml-2 -mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14 5l7 7m0 0l-7 7m7-7H3" />
          </svg>
        </a>
      </div>

      <!-- Menú móvil -->
      <button id="mobile-toggle" class="md:hidden flex items-center justify-center w-10 h-10 focus:outline-none z-10" aria-label="Menú" aria-expanded="false">
        <div class="burger-icon">
          <span class="burger-line"></span>
          <span class="burger-line"></span>
        </div>
      </button>
    </div>
  </div>
  
  <!-- Menú móvil overlay -->
  <div id="mobile-menu" class="fixed inset-0 bg-white/95 backdrop-blur-md flex flex-col items-center justify-start pt-20 opacity-0 pointer-events-none transition-all duration-300 z-40 overflow-hidden" aria-hidden="true">
    <!-- Botón de cierre -->
    <button id="mobile-close" class="absolute top-4 right-4 p-2 text-gray-600 hover:text-black transition-colors duration-200" aria-label="Cerrar menú">
      <svg xmlns="http://www.w3.org/2000/svg" class="w-6 h-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
      </svg>
    </button>

    <nav class="flex flex-col items-center space-y-6 w-full max-w-md px-4">
      {navItems.map((item, index) => {
        return (
          <a
            href={item.href}
            class="text-2xl font-medium text-gray-800 transition-all duration-300 py-3 mobile-nav-item w-full text-center relative group"
            data-scroll-adjust={item.scrollAdjust}
            style={`--index: ${index}`}
          >
            {item.label}
            <span class="absolute bottom-0 left-1/2 w-0 h-0.5 bg-black transition-all duration-300 transform -translate-x-1/2 group-hover:w-1/2"></span>
          </a>
        );
      })}
      
      <div class="w-full max-w-xs pt-6">
        <a href="#contact" class="flex items-center justify-center w-full px-6 py-4 text-lg font-medium bg-black text-white transition-all duration-300 rounded-full hover:opacity-90 hover:scale-105">
          Contact
          <svg xmlns="http://www.w3.org/2000/svg" class="w-5 h-5 ml-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14 5l7 7m0 0l-7 7m7-7H3" />
          </svg>
        </a>
      </div>
    </nav>
  </div>

  <!-- (Eliminado Services) -->
</header>

<script>
  // Script para manejar la navegación interactiva
  // Prevenir errores de TypeScript
declare global {
  interface Window {
    ontouchstart?: any;
  }
}

document.addEventListener('DOMContentLoaded', () => {
    const header = document.getElementById('main-header');
    const navItems = document.querySelectorAll('.nav-item');
    const navIndicator = document.getElementById('nav-indicator');
    const mobileToggle = document.getElementById('mobile-toggle');
    const mobileMenu = document.getElementById('mobile-menu');
    const mobileClose = document.getElementById('mobile-close');
    const burgerIcon = document.querySelector('.burger-icon');
    const allNavLinks = document.querySelectorAll('nav .nav-item');
    const logoLink = document.querySelector('.logo-link');
    let isMenuOpen = false;
    let activeNavItem: HTMLElement | null = null;
    let disableIndicatorUpdate = false;
    
    // Función para actualizar el indicador de navegación
    function updateIndicatorBySection(sectionId: string) {
      navItems.forEach(item => {
        item.classList.remove('nav-active');
      });
      
      if (sectionId === 'home') {
        if (navIndicator) {
          navIndicator.style.opacity = '0';
        }
        activeNavItem = null;
        return;
      }
      
      const targetNavItem = document.querySelector(`nav .nav-item[href="#${sectionId}"]`) as HTMLElement;
      if (targetNavItem) {
        targetNavItem.classList.add('nav-active');
        activeNavItem = targetNavItem;
        
        if (navIndicator) {
          navIndicator.style.width = `${targetNavItem.offsetWidth - 20}px`;
          navIndicator.style.left = `${targetNavItem.offsetLeft + 10}px`;
          navIndicator.style.opacity = '1';
        }
      }
    }
    
    // Hover en elementos del menú
    navItems.forEach(item => {
      item.addEventListener('mouseenter', () => {
        if (!isMenuOpen && navIndicator) {
          navIndicator.style.width = `${(item as HTMLElement).offsetWidth - 20}px`;
          navIndicator.style.left = `${(item as HTMLElement).offsetLeft + 10}px`;
          navIndicator.style.opacity = '1';
          item.classList.add('nav-hover');
        }
      });
      
      item.addEventListener('mouseleave', () => {
        if (!isMenuOpen && navIndicator) {
          item.classList.remove('nav-hover');
          
          if (activeNavItem) {
            navIndicator.style.width = `${activeNavItem.offsetWidth - 20}px`;
            navIndicator.style.left = `${activeNavItem.offsetLeft + 10}px`;
            navIndicator.style.opacity = '1';
          } else {
            navIndicator.style.opacity = '0';
          }
        }
      });
    });
    
    // Scroll suave a secciones
    allNavLinks.forEach(link => {
      link.addEventListener('click', (e) => {
        e.preventDefault();
        
        if (isMenuOpen) toggleMobileMenu();
        
        const targetId = link.getAttribute('href');
        if (!targetId) return;
        
        const targetIdClean = targetId.substring(1);
        disableIndicatorUpdate = true;
        
        navItems.forEach(item => {
          item.classList.remove('nav-active');
          if (item.getAttribute('href') === targetId) {
            item.classList.add('nav-active');
            if (navIndicator) {
              navIndicator.style.width = `${(item as HTMLElement).offsetWidth - 20}px`;
              navIndicator.style.left = `${(item as HTMLElement).offsetLeft + 10}px`;
              navIndicator.style.opacity = '1';
              activeNavItem = item as HTMLElement;
            }
          }
        });
        
        if (targetIdClean === 'home') {
          window.scrollTo({
            top: 0,
            behavior: 'smooth'
          });
        } else {
          const targetSection = document.querySelector(targetId);
          if (targetSection && header) {
            const adjustAttr = link.getAttribute('data-scroll-adjust');
            const customAdjust = adjustAttr ? parseInt(adjustAttr) : 0;
            const headerHeight = header.offsetHeight;
            const targetPosition = targetSection.getBoundingClientRect().top + window.pageYOffset - headerHeight - customAdjust;
            
            window.scrollTo({
              top: targetPosition,
              behavior: 'smooth'
            });
          }
        }
        
        setTimeout(() => {
          disableIndicatorUpdate = false;
        }, 700);
      });
    });
    
    // Activar enlaces según la sección visible
    function setActiveNavItem() {
      if (disableIndicatorUpdate || !header) return;

      const sections = document.querySelectorAll('section[id]');
      let scrollPosition = window.scrollY + header.offsetHeight + 100;
      let foundActiveSection = false;
      
      sections.forEach(section => {
        const sectionTop = (section as HTMLElement).offsetTop;
        const sectionHeight = (section as HTMLElement).offsetHeight;
        const sectionId = section.getAttribute('id');
        
        if (sectionId && scrollPosition >= sectionTop && scrollPosition < sectionTop + sectionHeight) {
          updateIndicatorBySection(sectionId);
          foundActiveSection = true;
        }
      });
      
      if (!foundActiveSection && scrollPosition < 100 + header.offsetHeight) {
        updateIndicatorBySection('home');
      }
    }
    
    // Efectos de scroll
    function handleScroll() {
      if (!header) return;
      
      if (window.scrollY > 20) {
        header.classList.add('scrolled');
      } else {
        header.classList.remove('scrolled');
      }
      
      setActiveNavItem();
    }
    
    // Toggle del menú móvil
    function toggleMobileMenu() {
      if (!mobileMenu || !mobileToggle || !burgerIcon) return;
      
      isMenuOpen = !isMenuOpen;
      mobileMenu.setAttribute('aria-hidden', String(!isMenuOpen));
      mobileToggle.setAttribute('aria-expanded', String(isMenuOpen));
      
      if (isMenuOpen) {
        mobileMenu.classList.add('opacity-100', 'pointer-events-auto');
        mobileMenu.classList.remove('opacity-0', 'pointer-events-none');
        document.body.style.overflow = 'hidden';
        
        // Reiniciar las animaciones de los elementos del menú
        const mobileNavItems = document.querySelectorAll('.mobile-nav-item');
        mobileNavItems.forEach((item, index) => {
          item.classList.remove('animated');
          void (item as HTMLElement).offsetWidth; // Forzar reflow
          (item as HTMLElement).style.animationDelay = `${index * 0.1}s`;
          item.classList.add('animated');
        });
      } else {
        mobileMenu.classList.remove('opacity-100', 'pointer-events-auto');
        mobileMenu.classList.add('opacity-0', 'pointer-events-none');
        document.body.style.overflow = '';
      }
    }
    
    if (mobileToggle) {
      mobileToggle.addEventListener('click', toggleMobileMenu);
    }

    if (mobileClose) {
      mobileClose.addEventListener('click', toggleMobileMenu);
    }
    
    // Cerrar menú al hacer clic en un enlace
    const mobileLinks = mobileMenu?.querySelectorAll('a');
    mobileLinks?.forEach(link => {
      link.addEventListener('click', (e) => {
        e.preventDefault();
        
        // Guardar referencias antes de cerrar el menú
        const targetId = link.getAttribute('href');
        if (!targetId || !header) return;
        
        const targetIdClean = targetId.substring(1);
        const adjustAttr = link.getAttribute('data-scroll-adjust');
        const customAdjust = adjustAttr ? parseInt(adjustAttr) : 0;
        
        // Cerrar el menú con un pequeño retraso para que se vea la animación
        if (isMenuOpen) {
          // Añadir clase de animación de salida
          link.classList.add('clicked');
          
          // Retrasar el cierre del menú para permitir que se vea la animación
          setTimeout(() => {
            toggleMobileMenu();
            
            // Navegar después de cerrar el menú
            setTimeout(() => {
              if (targetIdClean === 'home') {
                window.scrollTo({
                  top: 0,
                  behavior: 'smooth'
                });
              } else {
                const targetSection = document.querySelector(targetId);
                if (targetSection) {
                  const headerHeight = header.offsetHeight;
                  const targetPosition = targetSection.getBoundingClientRect().top + window.pageYOffset - headerHeight - customAdjust;
                  
                  window.scrollTo({
                    top: targetPosition,
                    behavior: 'smooth'
                  });
                }
              }
            }, 300); // Retraso para la navegación después de cerrar el menú
          }, 200); // Retraso para cerrar el menú
        } else {
          // Si el menú ya está cerrado, navegar directamente
          if (targetIdClean === 'home') {
            window.scrollTo({
              top: 0,
              behavior: 'smooth'
            });
          } else {
            const targetSection = document.querySelector(targetId);
            if (targetSection) {
              const headerHeight = header.offsetHeight;
              const targetPosition = targetSection.getBoundingClientRect().top + window.pageYOffset - headerHeight - customAdjust;
              
              window.scrollTo({
                top: targetPosition,
                behavior: 'smooth'
              });
            }
          }
        }
      });
    });
    
    // Event listeners
    window.addEventListener('scroll', handleScroll);
    window.addEventListener('resize', () => {
      if (activeNavItem && navIndicator) {
        navIndicator.style.width = `${activeNavItem.offsetWidth - 20}px`;
        navIndicator.style.left = `${activeNavItem.offsetLeft + 10}px`;
      }
    });
    
    // Inicialización
    handleScroll();
    
    // Manejar el evento de redimensionamiento de ventana para actualizar el indicador
    window.addEventListener('resize', () => {
      if (activeNavItem && navIndicator) {
        navIndicator.style.width = `${activeNavItem.offsetWidth - 20}px`;
        navIndicator.style.left = `${activeNavItem.offsetLeft + 10}px`;
      }
    });
    
    // Manejar el evento de orientación para dispositivos móviles
    window.addEventListener('orientationchange', () => {
      setTimeout(() => {
        if (activeNavItem && navIndicator) {
          navIndicator.style.width = `${activeNavItem.offsetWidth - 20}px`;
          navIndicator.style.left = `${activeNavItem.offsetLeft + 10}px`;
        }
      }, 200);
    });
    
    if (logoLink) {
      logoLink.addEventListener('click', (e) => {
        e.preventDefault();
        window.scrollTo({
          top: 0,
          behavior: 'smooth'
        });
      });
    }
    
    // Detectar si es un dispositivo táctil
    const isTouchDevice = () => {
      return 'ontouchstart' in window || ('maxTouchPoints' in navigator && (navigator as any).maxTouchPoints > 0);
    };
    
    // Si es un dispositivo táctil, ajustar el comportamiento del menú
    if (isTouchDevice()) {
      document.documentElement.classList.add('touch-device');
    }
  });
</script>

<style>
  #main-header {
    font-family: 'Plus Jakarta Sans', sans-serif;
    font-weight: 500;
  }
  
  /* Estilos para la navegación limpia */
  .scrolled {
    background-color: rgba(255, 255, 255, 0.95);
    backdrop-filter: blur(10px);
    box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);
  }
  
  /* Estilos para elementos de navegación */
  .nav-item {
    color: rgba(0, 0, 0, 0.7);
    display: flex;
    align-items: center;
    justify-content: center;
    letter-spacing: 0.01em;
    position: relative;
    transition: color 0.3s ease;
  }
  
  .nav-item:hover {
    color: rgba(0, 0, 0, 0.9);
  }
  
  /* Estilo para item activo */
  .nav-active {
    color: #000;
    font-weight: 500;
  }
  
  /* Mejorar la transición del indicador */
  #nav-indicator {
    transition: all 0.3s cubic-bezier(0.25, 0.1, 0.25, 1);
    z-index: 1;
  }
  
  /* Efecto hover en el logo */
  .logo-link {
    transition: transform 0.3s ease;
  }
  
  .logo-link:hover {
    transform: scale(1.05);
  }
  
  /* Estilos para el botón hamburguesa */
  .burger-icon {
    position: relative;
    width: 24px;
    height: 18px;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
  }
  
  .burger-line {
    width: 100%;
    height: 2px;
    background-color: black;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    transform-origin: center;
  }
  
  #mobile-toggle[aria-expanded="true"] .burger-line:first-child {
    transform: translateY(8px) rotate(45deg);
  }
  
  #mobile-toggle[aria-expanded="true"] .burger-line:last-child {
    transform: translateY(-8px) rotate(-45deg);
  }
  
  #mobile-menu[aria-hidden="false"] {
    opacity: 1;
    pointer-events: auto;
  }
  
  /* Animación de entrada para el menú móvil */
  @keyframes fadeUpIn {
    from {
      opacity: 0;
      transform: translateY(10px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
  
  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
  
  #mobile-menu nav a {
    animation: fadeUpIn 0.5s ease forwards;
    animation-delay: calc(0.1s * var(--index, 0));
    opacity: 0;
  }
  
  #mobile-menu.opacity-100 {
    transition-timing-function: cubic-bezier(0.22, 1, 0.36, 1);
  }
  
  /* Mejora en animaciones de elementos del menu móvil */
  .mobile-nav-item {
    position: relative;
    opacity: 0;
    transform: translateY(20px);
  }
  
  .mobile-nav-item.animated {
    animation: fadeInUp 0.5s forwards;
    animation-delay: var(--delay, 0s);
  }
  
  #mobile-menu.opacity-100 .mobile-nav-item {
    opacity: 1;
    transform: translateY(0);
  }
  
  /* Animación al hacer clic en un elemento del menú */
  .mobile-nav-item.clicked {
    animation: pulseOut 0.3s forwards;
  }
  
  @keyframes pulseOut {
    0% {
      transform: scale(1);
      opacity: 1;
    }
    50% {
      transform: scale(1.05);
      opacity: 1;
    }
    100% {
      transform: scale(0.95);
      opacity: 0;
    }
  }
  
  .mobile-nav-item::after {
    content: '';
    position: absolute;
    bottom: -2px;
    left: 50%;
    width: 0;
    height: 1px;
    background-color: #000;
    transition: all 0.3s ease;
    transform: translateX(-50%);
  }
  
  .mobile-nav-item:hover::after {
    width: 30px;
  }
  
  /* Mejoras en el menú móvil */
  #mobile-menu {
    transform: translateY(-100%);
    transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
    backdrop-filter: blur(10px);
    height: 100vh;
  }
  
  #mobile-menu.opacity-100 {
    transform: translateY(0);
    opacity: 1;
    pointer-events: auto;
  }

  /* Animaciones mejoradas para el menú móvil */
  @keyframes slideIn {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .mobile-nav-item {
    opacity: 0;
    transform: translateY(20px);
    transition: all 0.3s ease;
  }

  #mobile-menu.opacity-100 .mobile-nav-item {
    animation: slideIn 0.5s forwards;
    animation-delay: calc(0.1s * var(--index, 0));
  }

  .mobile-nav-item:hover {
    color: #000;
    transform: translateY(-2px);
  }

  /* Mejoras para dispositivos táctiles */
  @media (max-width: 768px) {
    .mobile-nav-item {
      padding: 1rem 0;
      font-size: 1.5rem;
      width: 100%;
      text-align: center;
      touch-action: manipulation;
    }

    .burger-icon {
      width: 24px;
      height: 18px;
      position: relative;
      z-index: 50;
    }

    .burger-line {
      background-color: #000;
      height: 2px;
      width: 100%;
      transition: all 0.3s ease;
    }

    #mobile-toggle[aria-expanded="true"] .burger-line:first-child {
      transform: translateY(8px) rotate(45deg);
    }

    #mobile-toggle[aria-expanded="true"] .burger-line:last-child {
      transform: translateY(-8px) rotate(-45deg);
    }

    #main-header {
      position: fixed;
      top: 0;
      left: 0;
      right: 0;
      z-index: 50;
    }
  }

  /* Estilos para el botón de cierre */
  #mobile-close {
    transition: transform 0.3s ease;
  }

  #mobile-close:hover {
    transform: rotate(90deg);
  }
</style>