---
// ContactSection.astro - Secci√≥n de contacto desplegable
---

<div class="w-full max-w-7xl mx-auto px-6 md:px-12 py-16 transform transition-transform duration-700 ease-out contact-section">
  <div class="flex justify-between items-start mb-8">
    <h2 class="section-title">
      Our <span class="font-bold">Contact</span>
    </h2>
    <button 
      data-contact-close
      class="text-black hover:text-gray-600 transition-colors p-2"
      aria-label="Close contact form"
    >
      <svg xmlns="http://www.w3.org/2000/svg" class="w-6 h-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
      </svg>
    </button>
  </div>
  
  <div class="mt-8">
    <div class="bg-black rounded-md p-8 md:p-12 flex flex-col md:flex-row gap-8">
      <form id="contact-form" class="flex-1 flex flex-col gap-6">
        <input
          type="email"
          name="user_email"
          id="user_email"
          placeholder="Email..."
          class="bg-white text-black px-4 py-3 rounded-sm outline-none"
          required
        />
        <textarea
          name="message"
          id="message"
          placeholder="Leave your message..."
          class="bg-white text-black px-4 py-3 rounded-sm outline-none min-h-[240px]"
          required
        ></textarea>
        <button
          type="submit"
          class="border border-white text-white py-2 mt-2 hover:bg-white hover:text-black transition"
        >
          Send message
        </button>
      </form>
      <div class="flex-1 flex flex-col items-center">
        <div class="bg-neutral-900 text-white rounded-md p-6 w-full flex flex-col items-center border border-neutral-700">
          <div class="mb-4 font-semibold text-lg">Book a meeting</div>
          <div class="w-full h-64 flex items-center justify-center border border-neutral-700 rounded bg-black/40 mb-4">
            <span class="text-neutral-400">[Calendar Widget]</span>
          </div>
          <div class="flex gap-2 w-full">
            <select class="flex-1 bg-black text-white border border-white px-2 py-1 rounded">
              <option>10:00</option>
              <option>10:30</option>
              <option>11:00</option>
            </select>
            <button class="border border-white text-white px-4 py-1 rounded hover:bg-white hover:text-black transition">
              Book meeting
            </button>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<style>
  .contact-section {
    transform: translateY(100%);
    opacity: 0;
    position: fixed;
    bottom: 0;
    left: 0;
    right: 0;
    background: white;
    z-index: 100;
    max-height: 90vh;
    overflow-y: auto;
    box-shadow: 0 -4px 6px -1px rgba(0, 0, 0, 0.1), 0 -2px 4px -1px rgba(0, 0, 0, 0.06);
  }

  .contact-section.visible {
    transform: translateY(0);
    opacity: 1;
  }
</style>

<script>
  import { initEmailJS, sendEmail } from '../utils/emailjs.js';

  document.addEventListener('DOMContentLoaded', () => {
    // Initialize EmailJS
    initEmailJS();
    
    const contactSection = document.querySelector('.contact-section') as HTMLElement | null;
    const contactButton = document.querySelector('[data-contact-toggle]');
    const closeButton = document.querySelector('[data-contact-close]');
    const contactForm = document.getElementById('contact-form') as HTMLFormElement | null;
    
    if (contactButton) {
      contactButton.addEventListener('click', () => {
        contactSection?.classList.add('visible');
        document.body.style.overflow = 'hidden';
      });
    }
    
    if (closeButton) {
      closeButton.addEventListener('click', () => {
        contactSection?.classList.remove('visible');
        document.body.style.overflow = '';
      });
    }

    // Handle form submission
    if (contactForm) {
      contactForm.addEventListener('submit', function(e) {
        e.preventDefault();
        
        const submitButton = contactForm.querySelector('button[type="submit"]') as HTMLButtonElement | null;
        if (!submitButton) return;
        
        const originalButtonText = submitButton.textContent || 'Send message';
        submitButton.textContent = 'Sending...';
        submitButton.disabled = true;
        
        // Get form data
        const emailInput = document.getElementById('user_email') as HTMLInputElement | null;
        const messageInput = document.getElementById('message') as HTMLTextAreaElement | null;
        
        if (!emailInput || !messageInput) {
          submitButton.textContent = 'Error: Form fields not found';
          setTimeout(() => {
            submitButton.textContent = originalButtonText;
            submitButton.disabled = false;
          }, 3000);
          return;
        }
        
        // Prepare template parameters
        const templateParams = {
          user_email: emailInput.value,
          message: messageInput.value
        };
        
        // Send email using EmailJS
        sendEmail(templateParams)
          .then(function(response) {
            console.log('SUCCESS!', response.status, response.text);
            submitButton.textContent = 'Message sent!';
            
            // Reset form
            contactForm.reset();
            
            // Reset button after 3 seconds
            setTimeout(() => {
              submitButton.textContent = originalButtonText;
              submitButton.disabled = false;
            }, 3000);
          })
          .catch(function(error) {
            console.log('FAILED...', error);
            submitButton.textContent = 'Error sending message';
            
            // Reset button after 3 seconds
            setTimeout(() => {
              submitButton.textContent = originalButtonText;
              submitButton.disabled = false;
            }, 3000);
          });
      });
    }

    // Cerrar al hacer clic fuera del formulario
    document.addEventListener('click', (e) => {
      if (contactSection?.classList.contains('visible') && 
          !contactSection.contains(e.target as Node) && 
          !(e.target as Element).closest('[data-contact-toggle]')) {
        contactSection.classList.remove('visible');
        document.body.style.overflow = '';
      }
    });
  });
</script>